version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: clinic
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - clinic-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./springboot-backend
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/clinic
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL-AUTO: update
      JWT_SECRET: your-strong-secret-key-here
      JWT_EXPIRATION_MS: 86400000
    ports:
      - "8080:8080"
    networks:
      - clinic-network
    restart: unless-stopped

  frontend:
    build:
      context: ./react-frontend
      dockerfile: Dockerfile
    depends_on:
      - backend
    ports:
      - "80:80"
    networks:
      - clinic-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  clinic-network:
    driver: bridge