<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="net.clinic.springboot.controller.AuthControllerFuzzTest" time="8.394" tests="1" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1251"/>
    <property name="java.class.path" value="D:\6sem\rksp\Clinic\springboot-backend\target\test-classes;D:\6sem\rksp\Clinic\springboot-backend\target\classes;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.2.5\spring-boot-starter-data-jpa-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.2.5\spring-boot-starter-aop-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.2.5\spring-boot-starter-jdbc-3.2.5.jar;C:\Users\Magicbook\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-jdbc\6.1.6\spring-jdbc-6.1.6.jar;C:\Users\Magicbook\.m2\repository\org\hibernate\orm\hibernate-core\6.4.4.Final\hibernate-core-6.4.4.Final.jar;C:\Users\Magicbook\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Magicbook\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Magicbook\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Magicbook\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Magicbook\.m2\repository\net\bytebuddy\byte-buddy\1.14.13\byte-buddy-1.14.13.jar;C:\Users\Magicbook\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\Magicbook\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\Magicbook\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\Magicbook\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\Magicbook\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Magicbook\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Magicbook\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Magicbook\.m2\repository\org\springframework\data\spring-data-jpa\3.2.5\spring-data-jpa-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\data\spring-data-commons\3.2.5\spring-data-commons-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-orm\6.1.6\spring-orm-6.1.6.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-context\6.1.6\spring-context-6.1.6.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-tx\6.1.6\spring-tx-6.1.6.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-beans\6.1.6\spring-beans-6.1.6.jar;C:\Users\Magicbook\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\Magicbook\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-aspects\6.1.6\spring-aspects-6.1.6.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.2.5\spring-boot-starter-web-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter\3.2.5\spring-boot-starter-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.2.5\spring-boot-starter-logging-3.2.5.jar;C:\Users\Magicbook\.m2\repository\ch\qos\logback\logback-classic\1.4.14\logback-classic-1.4.14.jar;C:\Users\Magicbook\.m2\repository\ch\qos\logback\logback-core\1.4.14\logback-core-1.4.14.jar;C:\Users\Magicbook\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.21.1\log4j-to-slf4j-2.21.1.jar;C:\Users\Magicbook\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Magicbook\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\Magicbook\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.2.5\spring-boot-starter-json-3.2.5.jar;C:\Users\Magicbook\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.4\jackson-datatype-jdk8-2.15.4.jar;C:\Users\Magicbook\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.4\jackson-datatype-jsr310-2.15.4.jar;C:\Users\Magicbook\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.4\jackson-module-parameter-names-2.15.4.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.2.5\spring-boot-starter-tomcat-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.20\tomcat-embed-core-10.1.20.jar;C:\Users\Magicbook\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.20\tomcat-embed-el-10.1.20.jar;C:\Users\Magicbook\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.20\tomcat-embed-websocket-10.1.20.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-web\6.1.6\spring-web-6.1.6.jar;C:\Users\Magicbook\.m2\repository\io\micrometer\micrometer-observation\1.12.5\micrometer-observation-1.12.5.jar;C:\Users\Magicbook\.m2\repository\io\micrometer\micrometer-commons\1.12.5\micrometer-commons-1.12.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-webmvc\6.1.6\spring-webmvc-6.1.6.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-expression\6.1.6\spring-expression-6.1.6.jar;C:\Users\Magicbook\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.5\jjwt-api-0.11.5.jar;C:\Users\Magicbook\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.5\jjwt-impl-0.11.5.jar;C:\Users\Magicbook\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.5\jjwt-jackson-0.11.5.jar;C:\Users\Magicbook\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.4\jackson-databind-2.15.4.jar;C:\Users\Magicbook\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.4\jackson-annotations-2.15.4.jar;C:\Users\Magicbook\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.4\jackson-core-2.15.4.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-devtools\3.2.5\spring-boot-devtools-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.2.5\spring-boot-autoconfigure-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\postgresql\postgresql\42.7.1\postgresql-42.7.1.jar;C:\Users\Magicbook\.m2\repository\org\checkerframework\checker-qual\3.41.0\checker-qual-3.41.0.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.2.5\spring-boot-starter-test-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-test\3.2.5\spring-boot-test-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.2.5\spring-boot-test-autoconfigure-3.2.5.jar;C:\Users\Magicbook\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\Magicbook\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\Magicbook\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\Magicbook\.m2\repository\net\minidev\json-smart\2.5.1\json-smart-2.5.1.jar;C:\Users\Magicbook\.m2\repository\net\minidev\accessors-smart\2.5.1\accessors-smart-2.5.1.jar;C:\Users\Magicbook\.m2\repository\org\ow2\asm\asm\9.6\asm-9.6.jar;C:\Users\Magicbook\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\Magicbook\.m2\repository\org\awaitility\awaitility\4.2.1\awaitility-4.2.1.jar;C:\Users\Magicbook\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Magicbook\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.2\junit-jupiter-5.10.2.jar;C:\Users\Magicbook\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.2\junit-jupiter-api-5.10.2.jar;C:\Users\Magicbook\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Magicbook\.m2\repository\org\junit\platform\junit-platform-commons\1.10.2\junit-platform-commons-1.10.2.jar;C:\Users\Magicbook\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Magicbook\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.2\junit-jupiter-params-5.10.2.jar;C:\Users\Magicbook\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.2\junit-jupiter-engine-5.10.2.jar;C:\Users\Magicbook\.m2\repository\org\junit\platform\junit-platform-engine\1.10.2\junit-platform-engine-1.10.2.jar;C:\Users\Magicbook\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Magicbook\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.13\byte-buddy-agent-1.14.13.jar;C:\Users\Magicbook\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Magicbook\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Magicbook\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\Magicbook\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-core\6.1.6\spring-core-6.1.6.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-jcl\6.1.6\spring-jcl-6.1.6.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-test\6.1.6\spring-test-6.1.6.jar;C:\Users\Magicbook\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\Magicbook\.m2\repository\org\projectlombok\lombok\1.18.34\lombok-1.18.34.jar;C:\Users\Magicbook\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\Magicbook\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\Magicbook\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Magicbook\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.2.5\spring-boot-starter-security-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-aop\6.1.6\spring-aop-6.1.6.jar;C:\Users\Magicbook\.m2\repository\org\springframework\security\spring-security-config\6.2.4\spring-security-config-6.2.4.jar;C:\Users\Magicbook\.m2\repository\org\springframework\security\spring-security-web\6.2.4\spring-security-web-6.2.4.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.2.5\spring-boot-starter-oauth2-resource-server-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\security\spring-security-core\6.2.4\spring-security-core-6.2.4.jar;C:\Users\Magicbook\.m2\repository\org\springframework\security\spring-security-crypto\6.2.4\spring-security-crypto-6.2.4.jar;C:\Users\Magicbook\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.2.4\spring-security-oauth2-resource-server-6.2.4.jar;C:\Users\Magicbook\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.2.4\spring-security-oauth2-core-6.2.4.jar;C:\Users\Magicbook\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.2.4\spring-security-oauth2-jose-6.2.4.jar;C:\Users\Magicbook\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.24.4\nimbus-jose-jwt-9.24.4.jar;C:\Users\Magicbook\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Europe/Moscow"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="RU"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-17\bin"/>
    <property name="sun.java.command" value="C:\Users\Magicbook\AppData\Local\Temp\surefire4723184786044555990\surefirebooter-20250505231905919_3.jar C:\Users\Magicbook\AppData\Local\Temp\surefire4723184786044555990 2025-05-05T23-19-05_773-jvmRun1 surefire-20250505231905919_1tmp surefire_0-20250505231905919_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="D:\6sem\rksp\Clinic\springboot-backend\target\test-classes;D:\6sem\rksp\Clinic\springboot-backend\target\classes;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.2.5\spring-boot-starter-data-jpa-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.2.5\spring-boot-starter-aop-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.2.5\spring-boot-starter-jdbc-3.2.5.jar;C:\Users\Magicbook\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-jdbc\6.1.6\spring-jdbc-6.1.6.jar;C:\Users\Magicbook\.m2\repository\org\hibernate\orm\hibernate-core\6.4.4.Final\hibernate-core-6.4.4.Final.jar;C:\Users\Magicbook\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Magicbook\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Magicbook\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Magicbook\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Magicbook\.m2\repository\net\bytebuddy\byte-buddy\1.14.13\byte-buddy-1.14.13.jar;C:\Users\Magicbook\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\Magicbook\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\Magicbook\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\Magicbook\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\Magicbook\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Magicbook\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Magicbook\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Magicbook\.m2\repository\org\springframework\data\spring-data-jpa\3.2.5\spring-data-jpa-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\data\spring-data-commons\3.2.5\spring-data-commons-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-orm\6.1.6\spring-orm-6.1.6.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-context\6.1.6\spring-context-6.1.6.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-tx\6.1.6\spring-tx-6.1.6.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-beans\6.1.6\spring-beans-6.1.6.jar;C:\Users\Magicbook\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\Magicbook\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-aspects\6.1.6\spring-aspects-6.1.6.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.2.5\spring-boot-starter-web-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter\3.2.5\spring-boot-starter-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.2.5\spring-boot-starter-logging-3.2.5.jar;C:\Users\Magicbook\.m2\repository\ch\qos\logback\logback-classic\1.4.14\logback-classic-1.4.14.jar;C:\Users\Magicbook\.m2\repository\ch\qos\logback\logback-core\1.4.14\logback-core-1.4.14.jar;C:\Users\Magicbook\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.21.1\log4j-to-slf4j-2.21.1.jar;C:\Users\Magicbook\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Magicbook\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\Magicbook\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.2.5\spring-boot-starter-json-3.2.5.jar;C:\Users\Magicbook\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.4\jackson-datatype-jdk8-2.15.4.jar;C:\Users\Magicbook\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.4\jackson-datatype-jsr310-2.15.4.jar;C:\Users\Magicbook\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.4\jackson-module-parameter-names-2.15.4.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.2.5\spring-boot-starter-tomcat-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.20\tomcat-embed-core-10.1.20.jar;C:\Users\Magicbook\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.20\tomcat-embed-el-10.1.20.jar;C:\Users\Magicbook\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.20\tomcat-embed-websocket-10.1.20.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-web\6.1.6\spring-web-6.1.6.jar;C:\Users\Magicbook\.m2\repository\io\micrometer\micrometer-observation\1.12.5\micrometer-observation-1.12.5.jar;C:\Users\Magicbook\.m2\repository\io\micrometer\micrometer-commons\1.12.5\micrometer-commons-1.12.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-webmvc\6.1.6\spring-webmvc-6.1.6.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-expression\6.1.6\spring-expression-6.1.6.jar;C:\Users\Magicbook\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.5\jjwt-api-0.11.5.jar;C:\Users\Magicbook\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.5\jjwt-impl-0.11.5.jar;C:\Users\Magicbook\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.5\jjwt-jackson-0.11.5.jar;C:\Users\Magicbook\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.4\jackson-databind-2.15.4.jar;C:\Users\Magicbook\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.4\jackson-annotations-2.15.4.jar;C:\Users\Magicbook\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.4\jackson-core-2.15.4.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-devtools\3.2.5\spring-boot-devtools-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.2.5\spring-boot-autoconfigure-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\postgresql\postgresql\42.7.1\postgresql-42.7.1.jar;C:\Users\Magicbook\.m2\repository\org\checkerframework\checker-qual\3.41.0\checker-qual-3.41.0.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.2.5\spring-boot-starter-test-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-test\3.2.5\spring-boot-test-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.2.5\spring-boot-test-autoconfigure-3.2.5.jar;C:\Users\Magicbook\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\Magicbook\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\Magicbook\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\Magicbook\.m2\repository\net\minidev\json-smart\2.5.1\json-smart-2.5.1.jar;C:\Users\Magicbook\.m2\repository\net\minidev\accessors-smart\2.5.1\accessors-smart-2.5.1.jar;C:\Users\Magicbook\.m2\repository\org\ow2\asm\asm\9.6\asm-9.6.jar;C:\Users\Magicbook\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\Magicbook\.m2\repository\org\awaitility\awaitility\4.2.1\awaitility-4.2.1.jar;C:\Users\Magicbook\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Magicbook\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.2\junit-jupiter-5.10.2.jar;C:\Users\Magicbook\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.2\junit-jupiter-api-5.10.2.jar;C:\Users\Magicbook\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Magicbook\.m2\repository\org\junit\platform\junit-platform-commons\1.10.2\junit-platform-commons-1.10.2.jar;C:\Users\Magicbook\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Magicbook\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.2\junit-jupiter-params-5.10.2.jar;C:\Users\Magicbook\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.2\junit-jupiter-engine-5.10.2.jar;C:\Users\Magicbook\.m2\repository\org\junit\platform\junit-platform-engine\1.10.2\junit-platform-engine-1.10.2.jar;C:\Users\Magicbook\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Magicbook\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.13\byte-buddy-agent-1.14.13.jar;C:\Users\Magicbook\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Magicbook\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Magicbook\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\Magicbook\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-core\6.1.6\spring-core-6.1.6.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-jcl\6.1.6\spring-jcl-6.1.6.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-test\6.1.6\spring-test-6.1.6.jar;C:\Users\Magicbook\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\Magicbook\.m2\repository\org\projectlombok\lombok\1.18.34\lombok-1.18.34.jar;C:\Users\Magicbook\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\Magicbook\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\Magicbook\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Magicbook\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.2.5\spring-boot-starter-security-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\spring-aop\6.1.6\spring-aop-6.1.6.jar;C:\Users\Magicbook\.m2\repository\org\springframework\security\spring-security-config\6.2.4\spring-security-config-6.2.4.jar;C:\Users\Magicbook\.m2\repository\org\springframework\security\spring-security-web\6.2.4\spring-security-web-6.2.4.jar;C:\Users\Magicbook\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.2.5\spring-boot-starter-oauth2-resource-server-3.2.5.jar;C:\Users\Magicbook\.m2\repository\org\springframework\security\spring-security-core\6.2.4\spring-security-core-6.2.4.jar;C:\Users\Magicbook\.m2\repository\org\springframework\security\spring-security-crypto\6.2.4\spring-security-crypto-6.2.4.jar;C:\Users\Magicbook\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.2.4\spring-security-oauth2-resource-server-6.2.4.jar;C:\Users\Magicbook\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.2.4\spring-security-oauth2-core-6.2.4.jar;C:\Users\Magicbook\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.2.4\spring-security-oauth2-jose-6.2.4.jar;C:\Users\Magicbook\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.24.4\nimbus-jose-jwt-9.24.4.jar;C:\Users\Magicbook\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\Magicbook"/>
    <property name="user.language" value="ru"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-07-16"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-17"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="D:\6sem\rksp\Clinic\springboot-backend"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="windows-1251"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\Magicbook\AppData\Local\Temp\surefire4723184786044555990\surefirebooter-20250505231905919_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.12+8-LTS-286"/>
    <property name="user.name" value="Magicbook"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="Cp1251"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\Magicbook\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\MAGICB~1\AppData\Local\Temp\"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="17.0.12"/>
    <property name="user.dir" value="D:\6sem\rksp\Clinic\springboot-backend"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="23960"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="windows-1251"/>
    <property name="native.encoding" value="Cp1251"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\bin;C:\Users\Magicbook\bin;C:\Program Files\Java\jdk-17\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0;C:\Windows\System32\OpenSSH;C:\Program Files (x86)\dotnet;C:\Program Files\Docker\Docker\resources\bin;D:\mongoDB\bin;C:\Program Files\Git\cmd;C:\Program Files\MongoDB\Server\8.0\bin;C:\Program Files\WireGuard;C:\apache-maven-3.9.9-bin\apache-maven-3.9.9\bin;D:\apache-maven-3.9.9-bin\apache-maven-3.9.9\bin;D:\nodejs;C:\Program Files\MySQL\MySQL Shell 8.0\bin;C:\Users\Magicbook\AppData\Local\Programs\Python\Python310\Scripts;C:\Users\Magicbook\AppData\Local\Programs\Python\Python310;C:\Users\Magicbook\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\PyCharm Community Edition 2022.2.3\bin;C:\Users\Magicbook\AppData\Local\atom\bin;D:\Microsoft VS Code\bin;C:\Graphviz\bin;C:\users\magicbook\appdata\local\programs\python\python310\lib\site-packages (6.0.1);C:\Program Files\Git\cmd;C:\sqlite;C:\Users\Magicbook\AppData\Roaming\npm;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="17.0.12+8-LTS-286"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="fuzzTestRegistration" classname="net.clinic.springboot.controller.AuthControllerFuzzTest" time="3.904">
    <system-out><![CDATA[23:19:06.774 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [net.clinic.springboot.controller.AuthControllerFuzzTest]: AuthControllerFuzzTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
23:19:06.880 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration net.clinic.springboot.SpringbootBackendApplication for test class net.clinic.springboot.controller.AuthControllerFuzzTest
23:19:07.099 [main] INFO org.springframework.boot.devtools.restart.RestartApplicationListener -- Restart disabled due to context in which it is running

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.5)

2025-05-05T23:19:07.308+03:00  INFO 23960 --- [           main] n.c.s.controller.AuthControllerFuzzTest  : Starting AuthControllerFuzzTest using Java 17.0.12 with PID 23960 (started by Magicbook in D:\6sem\rksp\Clinic\springboot-backend)
2025-05-05T23:19:07.309+03:00 DEBUG 23960 --- [           main] n.c.s.controller.AuthControllerFuzzTest  : Running with Spring Boot v3.2.5, Spring v6.1.6
2025-05-05T23:19:07.310+03:00  INFO 23960 --- [           main] n.c.s.controller.AuthControllerFuzzTest  : No active profile set, falling back to 1 default profile: "default"
2025-05-05T23:19:07.324+03:00 DEBUG 23960 --- [           main] o.s.w.c.s.GenericWebApplicationContext   : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@1517f633
2025-05-05T23:19:07.863+03:00  INFO 23960 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05T23:19:07.922+03:00  INFO 23960 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 51 ms. Found 3 JPA repository interfaces.
2025-05-05T23:19:08.359+03:00  INFO 23960 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05T23:19:08.417+03:00  INFO 23960 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.4.Final
2025-05-05T23:19:08.450+03:00  INFO 23960 --- [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-05-05T23:19:08.697+03:00  INFO 23960 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05T23:19:08.723+03:00  INFO 23960 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-05T23:19:08.889+03:00  INFO 23960 --- [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@283baa39
2025-05-05T23:19:08.891+03:00  INFO 23960 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-05-05T23:19:08.922+03:00  WARN 23960 --- [           main] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05T23:19:09.711+03:00  INFO 23960 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05T23:19:09.787+03:00  INFO 23960 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05T23:19:10.107+03:00  INFO 23960 --- [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-05T23:19:10.461+03:00  WARN 23960 --- [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05T23:19:10.624+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : 18 mappings in 'requestMappingHandlerMapping'
2025-05-05T23:19:10.737+03:00 DEBUG 23960 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-05-05T23:19:10.778+03:00  INFO 23960 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7a90796c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6c98079, org.springframework.security.web.context.SecurityContextHolderFilter@25f688d5, org.springframework.security.web.header.HeaderWriterFilter@28fa0ff8, org.springframework.web.filter.CorsFilter@5135b8a3, org.springframework.security.web.authentication.logout.LogoutFilter@4664cd32, net.clinic.springboot.security.JwtTokenFilter@4ef12d7e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3b96ea23, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@74c58f64, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@375376d5, org.springframework.security.web.session.SessionManagementFilter@693afcd1, org.springframework.security.web.access.ExceptionTranslationFilter@3118ed2c, org.springframework.security.web.access.intercept.AuthorizationFilter@37b97394]
2025-05-05T23:19:10.933+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-05-05T23:19:10.971+03:00 DEBUG 23960 --- [           main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-05-05T23:19:11.102+03:00 DEBUG 23960 --- [           main] n.c.springboot.security.JwtTokenFilter   : Filter 'jwtTokenFilter' configured for use
2025-05-05T23:19:11.102+03:00  INFO 23960 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-05-05T23:19:11.103+03:00  INFO 23960 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-05-05T23:19:11.104+03:00  INFO 23960 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2025-05-05T23:19:11.125+03:00  INFO 23960 --- [           main] n.c.s.controller.AuthControllerFuzzTest  : Started AuthControllerFuzzTest in 4.034 seconds (process running for 4.91)
Hibernate: select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.phone,u1_0.username from users u1_0
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select r1_0.user_id,r1_0.roles from user_roles r1_0 where r1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: select a1_0.user_id,a1_0.id,a1_0.appointment_time,d1_0.id,d1_0.name,d1_0.specialty from appointments a1_0 left join doctors d1_0 on d1_0.id=a1_0.doctor_id where a1_0.user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from user_roles where user_id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
Hibernate: delete from users where id=?
2025-05-05T23:19:11.740+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:11.745+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:11.746+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:11.749+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:11.784+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=ipvgaiepgcjctwwaimjggf, lastName=kkjcnnhjhdhmyfdvfroaqlvvyqrnqne, email=te (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:11.890+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:11.891+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@37a522c8]
2025-05-05T23:19:11.906+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:11.906+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:11.906+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:11.906+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:11.907+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=qhsdddbbaxoekzamyttzbziqzddiacpfdcfqf, lastName=ysvnvpqyrrzbornhcxpnp, ema (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:11.969+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:11.969+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@3c833d43]
2025-05-05T23:19:11.971+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:11.971+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:11.971+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:11.971+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:11.972+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=bvcqdnjhnfhfwkxxh, lastName=ovcte, email=test-6c846b27-5464-4f8b-b05e-c678 (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:12.036+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:12.036+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@474172e5]
2025-05-05T23:19:12.038+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:12.038+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:12.038+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:12.038+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:12.039+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=loxqshizcclqxpbzfaladvybznzq, lastName=wbnylgszaps, email=test-f26046db-a9 (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:12.105+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:12.105+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@61d9da53]
2025-05-05T23:19:12.106+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:12.107+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:12.107+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:12.107+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:12.108+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=rooyjlgiepjcggmijkykkstrhnbtzjeejpaxxosnpllhecapwfndxapnscdsnmxioknenbqohx (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:12.172+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:12.172+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@66626c96]
2025-05-05T23:19:12.174+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:12.174+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:12.175+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:12.175+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:12.175+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=izjdtxnxtylmrfwdiwgspqdzelsggwizxflldlgtcurrdkndstolzwozblrciterfhaphuxvdv (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:12.238+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:12.239+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@31782447]
2025-05-05T23:19:12.240+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:12.240+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:12.241+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:12.241+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:12.241+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=dojajb, lastName=ocfrkwsqozndrgcpqhhccdfovyaqypgpqxvvpl, email=test-e4a6bd (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:12.305+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:12.306+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@7aece85c]
2025-05-05T23:19:12.307+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:12.307+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:12.307+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:12.308+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:12.308+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=yasfzoduggitxk, lastName=fqifsbcinptoakimffpadvqfpnaiexap, email=test-f3b4 (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:12.378+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:12.379+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@3d5a6aca]
2025-05-05T23:19:12.380+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:12.380+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:12.380+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:12.381+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:12.381+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=pifjukeysplkyiwzjqbergkgpydflegxmar, lastName=apfgamnpyqrijhuarshufawufexc (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:12.446+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:12.446+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@2ee4c028]
2025-05-05T23:19:12.448+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:12.448+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:12.448+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:12.448+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:12.449+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=urbwmzpvddurarxwzyzyovsavoymzdsnbfhjagtefyixupktikgrgieoqjdy, lastName=czv (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:12.513+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:12.513+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@2aaa5122]
2025-05-05T23:19:12.515+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:12.515+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:12.515+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:12.515+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:12.516+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=vvzcjyxispulfxqigavmysbgnotkbtlmvqrexhzwwifrvvyidztjfdzxwvxmednqrmr, lastN (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:12.578+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:12.579+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@11fa5334]
2025-05-05T23:19:12.580+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:12.580+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:12.580+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:12.580+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:12.581+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=ixisvpgcjnluqghpscpjabbfhrhypocuqtl, lastName=lbgtsuzrpugfxjievd, email=te (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:12.643+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:12.643+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@f11fad9]
2025-05-05T23:19:12.644+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:12.645+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:12.645+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:12.645+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:12.645+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=miylgbynnkhgvndbzbygpbvves, lastName=rwvyaemhvgtoedbtzwjodzpgumrieoiiboygs (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:12.713+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:12.713+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@364bbba9]
2025-05-05T23:19:12.715+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:12.715+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:12.715+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:12.715+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:12.716+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=qaoatigdxwvnvmcdsbwtgvjntdgygvloaicqxoadryfvrswjxolyfrcjmhymrqfjcflftbqkso (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:12.778+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:12.778+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@427a4d68]
2025-05-05T23:19:12.780+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:12.780+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:12.780+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:12.780+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:12.781+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=mbiqnurxfkfktrkzofisdnzltwf, lastName=vwbarkdaetqrohkfvyxdfqmbjczvaeaplmnp (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:12.844+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:12.845+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@3947bad4]
2025-05-05T23:19:12.847+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:12.847+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:12.847+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:12.848+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:12.849+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=crathfniztxhobcxefqdvmcuvzpbysaebazzndaeennqfjk, lastName=ipjziztfmquywpao (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:12.912+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:12.912+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@5b3063b7]
2025-05-05T23:19:12.915+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:12.915+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:12.915+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:12.915+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:12.916+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=kskmdugbhzpbunouiyfpshdjcwndsixuudnopbhezemmcyjokninlqbfgbiwbrpzfhvvseujd, (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:12.978+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:12.978+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@2f84848e]
2025-05-05T23:19:12.980+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:12.980+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:12.980+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:12.980+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:12.981+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=mcffkwjlbvlbxwhmcmljghemdhvaaily, lastName=ughjomawexiwdrodumqzcmtezltjwco (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:13.040+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:13.041+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@453ef145]
2025-05-05T23:19:13.042+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:13.043+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:13.043+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:13.043+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:13.043+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=kjecxorqwqbpqfxmvrdtmvxrrncpivsqiyjzaremleixvlwbstwndhkdjcawqyjpdmfcdazxwk (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:13.103+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:13.103+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@13e6b26c]
2025-05-05T23:19:13.104+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:13.104+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:13.104+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:13.105+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:13.105+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=vmlgbtpgzebepk, lastName=tccwuarbytvwfntvolskjodkvccejvorefqjouyta, email= (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:13.165+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:13.165+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@38c38c5a]
2025-05-05T23:19:13.166+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:13.166+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:13.166+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:13.166+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:13.167+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=cqkrxnnlktsiwtwapcno, lastName=cttbaetfvchsyrd, email=test-64795f9e-dac0-4 (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:13.227+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:13.227+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@523d6b45]
2025-05-05T23:19:13.228+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:13.229+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:13.229+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:13.229+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:13.229+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=pldtbdeetzghhgftk, lastName=srr, email=test-10d125fa-850f-486b-9c14-6849f1 (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:13.289+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:13.289+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@6ddf3c5e]
2025-05-05T23:19:13.290+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:13.290+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:13.290+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:13.290+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:13.291+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=jrczqtq, lastName=umk, email=test-06531008-5822-4b8a-9ce1-a3db73eb8a19@exa (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:13.352+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:13.352+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@1bb6b0f3]
2025-05-05T23:19:13.353+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:13.354+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:13.354+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:13.354+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:13.354+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=awhcmnqkcs, lastName=rjfodmdkpljdfy, email=test-629becf4-ee60-4fc0-aa9d-f8 (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:13.416+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:13.416+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@54fc7fce]
2025-05-05T23:19:13.417+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:13.417+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:13.417+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:13.417+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:13.418+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=mjxoqsrvmmstdaxvaodycwliyrlqqthbrajmpuayzmext, lastName=qzxxlucowqmhacovkr (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:13.477+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:13.477+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@7288afd8]
2025-05-05T23:19:13.479+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:13.479+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:13.479+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:13.479+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:13.480+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=lccwmbszfujfzptpwdxqghb, lastName=cnsqziwsroihqnsrklzjorjzfilsxbcrjl, emai (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:13.539+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:13.539+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@50b4e828]
2025-05-05T23:19:13.541+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:13.541+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:13.541+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:13.541+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:13.541+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=vknpdhawjljzensrbgw, lastName=uagvtutfm, email=test-b10b154d-4778-43a3-8de (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:13.601+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:13.601+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@1d4ae17e]
2025-05-05T23:19:13.602+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:13.603+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:13.603+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:13.603+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:13.604+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=mtjafecfazimau, lastName=drbhssmkquk, email=test-56719f81-b544-45c4-a334-6 (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:13.663+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:13.663+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@56d5a50f]
2025-05-05T23:19:13.664+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:13.664+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:13.664+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:13.665+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:13.665+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=cejzkccncshdsypwlcawdiwvmiynfaglgadnmmsdunafoquu, lastName=bbagofemjiktzcj (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:13.727+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:13.728+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@3e3a7482]
2025-05-05T23:19:13.729+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:13.729+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:13.729+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:13.729+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:13.730+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=zugzxihspiaqmxm, lastName=rtitxpxohlexhkuiyafmjzrqtwlxkoyu, email=test-5bd (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:13.790+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:13.790+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@4b6b9255]
2025-05-05T23:19:13.792+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:13.792+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:13.792+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:13.792+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:13.792+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=woarokknaxriygsxfgyarlvbsidkzlcctxdfwhgsxakfsfhngardaktuiivybdoduvydrbaesp (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:13.853+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:13.853+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@562fa8f2]
2025-05-05T23:19:13.854+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:13.854+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:13.854+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:13.854+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:13.855+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=lonbfwqojyatzqfdsirlishtokrpmovhozhyplptpgjynuyubbdeypcoxeqcrrbrsguxi, las (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:13.915+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:13.915+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@380cb7e3]
2025-05-05T23:19:13.916+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:13.916+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:13.916+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:13.916+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:13.917+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=idezwvyiupsxxnksyuuqmtmfluiksx, lastName=uphhxkjmpejmbxbqvrzcezhlt, email= (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:13.979+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:13.979+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@5d08bc22]
2025-05-05T23:19:13.980+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:13.980+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:13.980+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:13.980+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:13.981+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=huwyzadlsfsfvvgdpovqywnl, lastName=xdncgexdfpjfpkthepljwzkecpwifziskesdusj (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:14.040+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:14.040+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@465b16bb]
2025-05-05T23:19:14.041+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:14.041+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:14.041+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:14.042+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:14.042+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=ianeupuinmgruqxnufayhcnlhjkm, lastName=aothkbtyxyyxtrtdj, email=test-a5cec (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:14.102+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:14.102+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@15c0c274]
2025-05-05T23:19:14.103+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:14.103+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:14.103+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:14.103+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:14.103+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=znemuilslvhqimayennp, lastName=ldmtjddbvsxkslyjbhqtiowwdbkdzdtdcailrirapx, (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:14.164+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:14.164+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@6e4e7a62]
2025-05-05T23:19:14.166+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:14.166+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:14.166+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:14.166+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:14.167+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=rrxxhekgkdbmuupywejxydcntjqectjlyhfniosjogqualyajy, lastName=lqktdkxkxwelv (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:14.227+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:14.227+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@23551fa1]
2025-05-05T23:19:14.228+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:14.228+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:14.229+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:14.229+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:14.229+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=xsvkeiqkpasatnqcjzqcgdrhrchuvwazikjndzibohznkwkchsagojyko, lastName=lfrgpn (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:14.289+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:14.289+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@144d064a]
2025-05-05T23:19:14.291+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:14.291+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:14.291+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:14.291+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:14.291+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=itgbvhxkdekuiejuivgnwuylosmb, lastName=pogowjboglwgmcxhskwbpwnfevzlucpluuv (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:14.352+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:14.352+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@62b903ae]
2025-05-05T23:19:14.354+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:14.354+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:14.354+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:14.354+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:14.354+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=iegdhaphksrsmuooaunuohf, lastName=fsldfrwzbnffdoldqqciearjsqandayfcgayipum (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:14.416+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:14.416+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@4ab0ebf0]
2025-05-05T23:19:14.416+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:14.416+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:14.416+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:14.417+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:14.418+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=lxibzefmnfwkwnpfdwsj, lastName=xafrebkrhloggyqj, email=test-32dd3c85-0bf4- (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:14.478+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:14.478+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@365a9434]
2025-05-05T23:19:14.480+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:14.480+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:14.480+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:14.480+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:14.480+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=iwcsxarfjkxo, lastName=vtodctbytcvvmnffqzhhoskvjkgeabebxjclzvyk, email=tes (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:14.540+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:14.540+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@5623354e]
2025-05-05T23:19:14.542+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:14.542+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:14.542+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:14.542+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:14.542+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=waedqdxnaududlcexagqxksddswfmyywqgdiqzcesbcwaztihaapgelmrcgvnbeevevsgtvonb (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:14.602+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:14.602+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@5fa49615]
2025-05-05T23:19:14.603+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:14.604+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:14.604+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:14.604+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:14.604+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=bzduqhiqsvouelxhgabanuzdrcmtmihqlywlfxfujvthvvcrt, lastName=awfjoxknpkstem (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:14.664+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:14.664+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@76145ef9]
2025-05-05T23:19:14.665+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:14.665+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:14.665+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:14.665+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:14.666+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=fbsmnzozxeymkfaqc, lastName=val, email=test-ae5e1b40-f741-4fca-b073-2e13eb (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:14.725+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:14.725+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@30eb427c]
2025-05-05T23:19:14.726+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:14.727+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:14.727+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:14.727+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:14.727+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=znls, lastName=vzfafonnulknfysoiasnkasbvzdzkkvcr, email=test-75f6c80a-e6d1 (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:14.788+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:14.788+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@659b0c20]
2025-05-05T23:19:14.788+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:14.789+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:14.789+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:14.789+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:14.789+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=ecmppfufhzyvxldoyqwwaqrsurcunsiwqthloiiev, lastName=yrvwtmcjfd, email=test (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:14.848+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:14.849+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@5e077a32]
2025-05-05T23:19:14.850+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:14.850+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:14.850+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:14.850+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:14.851+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=, lastName=hsidyvsnkubnpiseskhyogvwujylhkvqdhbsbdbuapfn, email=test-6c6ebf (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:14.910+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:14.910+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@5837b801]
2025-05-05T23:19:14.912+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:14.912+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:14.912+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:14.912+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:14.912+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=fip, lastName=cgxxsteeizqpdrknoywvuslcqiibxpoheeym, email=test-f62276df-82 (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:14.974+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:14.974+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@541b89ec]
2025-05-05T23:19:14.975+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-05-05T23:19:14.975+03:00 DEBUG 23960 --- [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-05T23:19:14.975+03:00 DEBUG 23960 --- [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-05-05T23:19:14.976+03:00 DEBUG 23960 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to net.clinic.springboot.controller.AuthController#register(RegisterRequest)
2025-05-05T23:19:14.976+03:00 DEBUG 23960 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [RegisterRequest(firstName=eces, lastName=vyrjcawnlrkjsjkzprrpnvjtrholjzcanvnvtvuzswnjoi, email=test- (truncated)...]
Hibernate: select u1_0.id from users u1_0 where u1_0.email=? fetch first ? rows only
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,phone,username) values (?,?,?,?,?,?)
Hibernate: insert into user_roles (user_id,roles) values (?,?)
2025-05-05T23:19:15.035+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-05T23:19:15.035+03:00 DEBUG 23960 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [net.clinic.springboot.model.User@402e48d]
]]></system-out>
  </testcase>
</testsuite>